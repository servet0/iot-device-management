version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: iot-platform-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-iot_platform}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - iot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MQTT Broker (Mosquitto)
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: iot-platform-mqtt
    ports:
      - "${MQTT_PORT:-1883}:1883"
      - "${MQTT_WS_PORT:-9001}:9001"
    volumes:
      - ./mqtt/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    networks:
      - iot-network
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -t test -m test"]
      interval: 30s
      timeout: 10s
      retries: 3

  # IoT Platform Application
  iot-platform:
    build: .
    container_name: iot-platform-app
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB:-iot_platform}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - MQTT_BROKER_URL=tcp://mqtt:1883
      - MQTT_CLIENT_ID=${MQTT_CLIENT_ID:-iot-platform-docker}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      mqtt:
        condition: service_healthy
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: iot-platform-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: iot-platform-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - iot-platform
    networks:
      - iot-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  iot-network:
    driver: bridge
